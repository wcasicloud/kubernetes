! Configuration File for keepalived
global_defs {
    router_id {{keepalived_router_id}}
}

{% if keepalived_scripts is defined %}
{% for name, details in keepalived_scripts.items() %}
vrrp_script {{ name }} {
  script "{{ details.check_script }}"
  interval {{ details.interval | default(5) }}   # checking every {{ details.interval | default(5) }} seconds (default: 5 seconds)
  fall {{ details.fall | default(3) }}           # require {{ details.fall | default(3) }} failures for KO (default: 3)
  rise {{ details.rise | default(6) }}           # require {{ details.rise | default(6) }} successes for OK (default: 6)
  {% if details.timeout is defined %}
  timeout {{ details.timeout }}                  # allow scripts like ping to succeed, before timing out
  {% endif %}
}
{% endfor %}
{% endif %}

{% for name, instance in keepalived_instances.items() %}
vrrp_instance {{ name }} {
  interface {{ instance.interface }}
  state {{ hostvars[inventory_hostname]['state'] }}
  virtual_router_id {{ instance.virtual_router_id }}
  priority {{ hostvars[inventory_hostname]['priority'] }}
  {% if instance.nopreempt is defined and instance.nopreempt | bool %}
  nopreempt                                        # Override VRRP RFC preemption default
  {% endif %}
  {% if instance.preempt_delay is defined %}
  preempt_delay {{ instance.preempt_delay }}       # Seconds after startup until preemption. 0 (default) to 1,000.
  {% endif %}
  {% if instance.authentication_password is defined %}
  authentication {
    auth_type PASS
    auth_pass {{instance.authentication_password}}
  }
  {% endif %}
  unicast_src_ip {{ hostvars[inventory_hostname]['inner_ip'] }}
  unicast_peer {
  {% for host in groups['k8s_api_servers'] %}
  {% if host != inventory_hostname %}
  {{ hostvars[host]['inner_ip'] }}
  {% endif %}
  {% endfor %}
  }
  virtual_ipaddress {
    {% for vip in instance.vips %}
    {{ vip }}
    {% endfor %}
  }
  {% if instance.virtual_routes is defined %}
  virtual_routes {
  {% for route in instance.virtual_routes %}
    {{ route }}
  {% endfor %}
  }
  {% endif %}
  {% if instance.track_scripts is defined %}
  track_script {
    {% for track_script in instance.track_scripts %}
    {{ track_script }}
    {% endfor %}
  }
  {% endif %}

  {% if instance.track_interfaces is defined %}
  track_interface {
    {% for track_interface in instance.track_interfaces %}
    {{ track_interface }}
    {% endfor %}
  }
  {% endif %}

  {% if instance.notify_script is defined %}
  notify "{{ instance.notify_script }}"
  {% endif %}
  {% if instance.notify_master is defined %}
  notify_master "{{ instance.notify_master }}"
  {% endif %}
  {% if instance.notify_backup is defined %}
  notify_backup "{{ instance.notify_backup }}"
  {% endif %}
  {% if instance.notify_fault is defined %}
  notify_fault "{{ instance.notify_fault }}"
  {% endif %}
  {% if instance.notify_stop is defined %}
  notify_stop "{{ instance.notify_stop }}"
  {% endif %}
}
{% endfor %}
